Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.
For example, given the following triangle
[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]

The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).
class Solution {
public:
    int minimumTotal(vector<vector<int> > &triangle) {
        int size = triangle.size();
        if(size == 0) return 0;
        if(size == 1) return triangle[0][0];
        
        for(int i= size-2; i>=0;i--){
            for(int j=0; j<triangle[i].size(); j++){
                triangle[i][j] += (triangle[i+1][j] < triangle[i+1][j+1] ? triangle[i+1][j] : triangle[i+1][j+1]); 
            }
        }
        return triangle[0][0];
    }
};