Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode *root) {
        if(!root) return 0;
        if(!root->left && !root->right) return 1;
        
        vector<TreeNode*> v;
        v.push_back(root);
        int level = 0;
        while(v.size()>0){
            level ++;
            vector<TreeNode*> v1;
            for(int i=0; i<v.size(); i++){
                if(!v[i]->left && !v[i]->right){
                    return level;
                }
                if(v[i]->left){
                    v1.push_back(v[i]->left);
                }
                if(v[i]->right){
                    v1.push_back(v[i]->right);
                }
            }
            
            if(v1.size() == 0) return level;
            v.clear();
            v.insert(v.begin(), v1.begin(), v1.end());
            v1.clear();
        }
        
        return level;
    }
};