Divide two integers without using multiplication, division and mod operator.
class Solution {
public:
    int divide(int dividend, int divisor) {
        if(dividend == 0) return 0;
        if(divisor == 0){
            return dividend > 0 ? INT_MAX : INT_MIN;
        }
        bool neg = false;
        long long d1=dividend;
        long long d2=divisor;
        if(dividend < 0){
            neg = !neg;
            d1=-d1;
        }
        if(divisor < 0){
            neg = !neg;
            d2=-d2;
        }
        if(d1<d2){
            return 0;
        }
        else if(d1==d2)
        {
            return neg ? -1 : 1;
        }
        else if(d2==1){
            return neg ? -d1 : (d1 >INT_MAX ? INT_MAX : d1);
        }
        
        int result = 0;
        int d3=d2;
        while(d1>d2){
            int count = 1;
            while(d2<d1){
                d2 = d2<<1;
                count= count<<1;
                if(d2 == d1) return neg ? -count:count;
            }
            d2 = d2>>1;
            
            count = count >>1;
            d1 = d1-d2;
            d2 = d3;
            result += count;
        }
        result = result + (d1==d2 ? 1 :0);
        return neg ? -result : result;
    }
};