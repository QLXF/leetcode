You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)â€¨Output: 7 -> 0 -> 8

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        if(!l1) return l2;
        if(!l2) return l1;
        
        int next = 0;
        ListNode *l3 = NULL;
        ListNode *l3h = NULL;
        while(l1 && l2){
            int result = l1->val+l2->val+next;
            if(!l3){
                l3 = new  ListNode(result%10);
                l3h = l3;
            }
            else{
                l3->next = new ListNode(result%10);
                l3 = l3->next;
            }
            next = result/10;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1){
            int result = l1->val+next;
            l3->next = new ListNode(result%10);
            l3 = l3->next;
            next = result/10;
            l1 = l1->next;
        }
        while(l2){
            int result = l2->val+next;
            l3->next = new ListNode(result%10);
            l3 = l3->next;
            next = result/10;
            l2 = l2->next;
        }
        if(next>0){
            l3->next = new ListNode(next);
        }
        return l3h;
    }
};