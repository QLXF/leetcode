Given a set of distinct integers, S, return all possible subsets.
Note:
	•	Elements in a subset must be in non-descending order.
	•	The solution set must not contain duplicate subsets.

class Solution {
public:
    vector<vector<int> > subsets(vector<int> &s) {
        vector<vector<int> > vv;
        int size =(int)s.size();
        if(size == 0){
            vector<int> v;
            vv.push_back(v);
            return vv;
        }
        sort(s.begin(), s.end());
        helper(s, 0, vv);
        vector<int> v;
        vv.push_back(v);
        return vv;
    }
    
    void helper(vector<int> &s, int start, vector<vector<int> > &vv){
        if(start == (s.size()-1)){
            vector<int> v(1, s[start]);
            vv.push_back(v);
            return;
        }
        helper(s, start+1, vv);
        int orgsize = vv.size();
        vv.push_back(vector<int>(1, s[start]));
        for(int j=0; j<orgsize; j++){
            vector<int> v1 = vv[j];
            v1.insert(v1.begin(), s[start]);
            vv.push_back(v1);
        }
    }
};