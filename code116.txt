Given a linked list, remove the nth node from the end of list and return its head.
For example,
   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:â€¨Given n will always be valid.â€¨Try to do this in one pass.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *removeNthFromEnd(ListNode *head, int n) {
        if(!head) return head;
        
        ListNode *f1=head;
        ListNode *f2=NULL;
        ListNode *f3=NULL;
        
        n--;
        while(f1->next && n>0){
            f1 = f1->next;
            n--;
        }
        if(n>0) return head;
        f2 = head;
        while(f1->next){
            f1=f1->next;
            if(!f3){
                f3 = f2;
            }
            else{
                f3 = f3->next;
            }
            f2=f2->next;
        }
        
        if(!f3){
            head = f2->next;
        }
        else{
            f3->next = f2->next;
        }
        return head;
    }
};