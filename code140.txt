Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
For example, â€¨Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.

class Solution {
public:
    int trap(int A[], int n) {
        if(n<=2) return 0;
        
        int f1=0;
        int f2=n-1;
        int area = 0;
        int blocks = 0;
        int min = 0;
        while(f1<f2){
            if(A[f1]<=A[f2]){
                area += (A[f1]-min)*(f2-f1+1);
                blocks += A[f1];
                min = A[f1];
                f1++;
                while(A[f1]<=min && f1<f2){
                    blocks += A[f1];
                    f1++;
                }
            }
            else if(A[f1] >A[f2]){
                area += (A[f2]-min)*(f2-f1+1);
                blocks +=A[f2];
                min = A[f2];
                f2--;
                while(A[f2]<=min && f2>f1){
                    blocks += A[f2];
                    f2--;
                }
            }
        }
        return area-blocks-min;
    }
};