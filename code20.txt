Given a 2D board containing 'X' and 'O', capture all regions surrounded by 'X'.
A region is captured by flipping all 'O's into 'X's in that surrounded region.
class Solution {
public:
void solve(vector<vector<char> > &board){
    int m = (int)board.size();
    if(m==0) return;
    int n = (int)board[0].size();
    if(n==0) return;
    
    for(int i=0; i<m; i++){
        solveHelper(board, i, 0, m, n);
        solveHelper(board, i, n-1, m, n);
    }
    
    for(int j=1; j<n-1;j++){
        solveHelper(board, 0, j, m, n);
        solveHelper(board, m-1, j, m, n);
    }
    
    for(int i=0; i<m; i++){
        for(int j=0; j<n; j++){
            if(board[i][j] =='O'){
                board[i][j] = 'X';
            }
            else if(board[i][j]== '1'){
                board[i][j] = 'O';
            }
        }
        
    }
}

void solveHelper(vector<vector<char> >& board, int i, int j, int m, int n){
    if(board[i][j] == 'O'){
        board[i][j] = '1';
        if(i-1>=0 && board[i-1][j] == 'O'){
            solveHelper(board, i-1, j, m,n);
        }
        if(i+1<=m-1 && board[i+1][j] == 'O'){
            solveHelper(board, i+1, j, m,n);
        }
        if(j-1>=0 && board[i][j-1] == 'O'){
            solveHelper(board, i, j-1, m,n);
        }
        if(j+1<=n-1 && board[i][j+1] == 'O'){
            solveHelper(board, i, j+1, m,n);
        }
    }
}

};