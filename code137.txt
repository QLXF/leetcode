Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.

class Solution {
public:
    int romanToInt(string s) {
        map<string, int> mp;
        mp.insert(make_pair("I",1));
        mp.insert(make_pair("IV",4));
        mp.insert(make_pair("V",5));
        mp.insert(make_pair("IX",9));
        mp.insert(make_pair("X",10));
        mp.insert(make_pair("XL", 40));
        mp.insert(make_pair("L", 50));
        mp.insert(make_pair("XC",90));
        mp.insert(make_pair("C",100));
        mp.insert(make_pair("CD",400));
        mp.insert(make_pair("D",500));
        mp.insert(make_pair("CM",900));
        mp.insert(make_pair("M",1000));
        
        int i=0;
        int result = 0;
        while(i < s.length()){
            string s1 = s.substr(i, 2);
            if(mp.find(s1) != mp.end()){
                result += mp[s1];
                i = i+2;
            }
            else{
                s1 = s.substr(i,1);
                result += mp[s1];
                i++;
            }
        }
        return result;
    }
};