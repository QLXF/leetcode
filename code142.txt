Implement regular expression matching with support for '.' and '*'.
'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true

class Solution {
public:
    bool isMatch(const char *s, const char *p) {
        if(!*s && !*p) return true;
        if(!*s){
            while(*p != '\0'){
                if(*p != '*'){
                    p++;
                    if(*p != '*'){
                        return false;
                    }
                }
                p++;
            }
            return true;
        }
        if(!*p){
            return false;
        }
        
        while(*s && *p){
            if(*s == *p){
                const char *p1 = p;
                while(*(p1+1) == '*'){
                    p1++;
                }
                if(*p1 == '*'){
                    while(*s != '\0'){
                        if(isMatch(s, p1+1)){
                            return true;
                        }
                        if(*s == *(s+1)){
                            s++;
                            continue;
                        }
                        break;
                    }
                    return isMatch(s+1, p1+1);
                }
                s++; p=p1+1;
            }
            else if(*p == '.'){
                const char *p1 = p;
                while(*(p1+1) == '*'){
                    p1++;
                }
                if(*p1 == '*'){
                    while(*s != '\0'){
                        if(isMatch(s, p1+1)){
                            return true;
                        }
                        s++;
                    }
                    return isMatch(s, p1+1);
                }
                s++; p  = p1+1;
            }
            else {
                const char *p1 = p;
                 while(*(p1+1) == '*'){
                     p1++;
                 }
                if(*p1 == '*'){
                    return isMatch(s, p1+1);
                }
                return false;
                
            }
        }
        return isMatch(s, p);
    }
};