Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
For example, "A man, a plan, a canal: Panama" is a palindrome. "race a car" is not a palindrome.
Note: Have you consider that the string might be empty? This is a good question to ask during an interview.
For the purpose of this problem, we define empty string as valid palindrome.
class Solution {
public:
    bool isPalindrome(string s) {
        if(s.length() == 0) return true;
        
        int f1=0; 
        int f2=s.length()-1;
        while(f1<f2){
            if(isAlphaNum(s[f1]) && isAlphaNum(s[f2])){
                if(!charsSame(s[f1],s[f2])){
                    return false;
                }
                f1++;f2--;
            }
            else if(isAlphaNum(s[f1]) && !isAlphaNum(s[f2])){
                f2--;
            }
            else if(!isAlphaNum(s[f1]) && isAlphaNum(s[f2])){
                f1++;
            }
            else{
                f1++;f2--;
            }
        }
        return true;
    }
    
    bool isAlphaNum(char c){
        if((c>='0' && c<='9') || (c>='a' && c<='z') || (c>='A' && c<='Z')){
            return true;
        }
        return false;
    }
    bool charsSame(char c1, char c2){
        if(c1 >= '0' && c1<='9' && c2 >= '0' && c2<='9' && c1==c2){
            return true;
        }
        if(((c1>='a' && c1<='z') || (c1>='A' && c1<='Z')) && ((c2>='a' && c2<='z') || (c2>='A' && c2<='Z'))){
            return (c1 == c2) || (abs(c1-c2) == 32);
        }
        return false;
    }
};
