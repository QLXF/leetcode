Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

class Solution {
public:
    bool isValid(string s) {
        int len = s.length();
        if(len<=1) return false;
        vector<char> v;
        
        for(int i=0; i<len; i++){
            if(isRight(s[i])){
                if(v.size() == 0){
                    return false;
                }
                else if(isPair(v.back(), s[i])){
                    v.pop_back();
                }
                else{
                    return false;
                }
            }
            else{
                v.push_back(s[i]);
            }
        }
        return v.size() == 0 ? true: false;
    }
    
    bool isRight(char c){
        return c==')' || c==']' || c=='}';
    }
    bool isPair(char c1, char c2){
        return (c1=='(' && c2==')') || (c1=='[' && c2==']') || (c1=='{' && c2=='}');
    }
};