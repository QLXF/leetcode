Given a linked list, determine if it has a cycle in it.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head) return false;
        if(head->next == head) return true;
        if(!head->next) return false;
        
        ListNode* p1 = head;
        ListNode* p2 = head;
        while(1){
            if(!p2->next || !p2->next->next){
                return false;
            }
            
            if(p2->next == p1 || p2->next->next ==p1){
                return true;
            }
            
            p2 = p2->next->next;
            p1 = p1->next;
        }
    }
};