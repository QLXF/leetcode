Given a sorted linked list, delete all duplicates such that each element appear only once.
For example,â€¨Given 1->1->2, return 1->2.â€¨Given 1->1->2->3->3, return 1->2->3.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        if(!head) return head;
        if(!head->next) return head;
        
        ListNode* f1 = head;
        ListNode* f2 = f1->next;
        while(1){
            while(f2){
                if(f2->val == f1->val){
                    f2 = f2->next;
                    continue;
                }
                break;
            }
            
            f1->next = f2;
            f1 = f2;
            if(!f2) break;
            f2 = f2->next;
        }
        return head;
    }
};