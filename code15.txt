There are N gas stations along a circular route, where the amount of gas at station i is gas[i].
You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.
Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.


class Solution {
public:
    int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {
        int size = gas.size();
        if(size == 0) return -1;
        if(size == 1){
            if(gas[0]>=cost[0]){
                return 0;
            }
            return -1;
        }
        bool found = false;
        for(int i=0; i<size;){
            if(gas[i] < cost[i]){
                i++;
                continue;
            }
            int leftover = gas[i]-cost[i];
            int count =1;
            for(int j=i+1; j%size<size; j++){
                int k = j%size;
                if (gas[k]+leftover >= cost[k]){
                    count++;
                    leftover = gas[k]+leftover - cost[k];
                    if(count==size){
                        found = true;
                        break;
                    }
                    continue;
                }
                if(j>=size-1){
                    return -1;
                }
                else{
                    i = j;
                }
                break;
            }
            if(found) return i;
        }
        return -1;
    }
};