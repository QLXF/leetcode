Follow up for problem "Populating Next Right Pointers in Each Node".
What if the given tree could be any binary tree? Would your previous solution still work?
/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        if(!root) return;
        if(!root->left && !root->right) return;
        
        TreeLinkNode* start = root;
        while(1){
            TreeLinkNode *org = NULL;
            TreeLinkNode *pre = NULL;
            while(start){
                TreeLinkNode* tleft = start->left;
                TreeLinkNode* tright = start->right;
                if(tleft && tright){
                    tleft->next = tright;
                    if(!pre){
                        pre = tright;
                        org = tleft;
                    }
                    else{
                        pre->next = tleft;
                        pre = tright;
                    }
                }
                else if(tleft && !tright){
                    if(!pre){
                        pre = tleft;
                        org = pre;
                    }
                    else{
                        pre->next = tleft;
                        pre = tleft;
                    }
                }
                else if(tright && !tleft){
                    if(!pre){
                        pre = tright;
                        org = pre;
                    }
                    else{
                        pre->next = tright;
                        pre = tright;
                    }
                }
                start = start->next;
            }
            
            start = org;
            if(!start) break;
        }
    }
};