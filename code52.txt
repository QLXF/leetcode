Given n, how many structurally unique BST's (binary search trees) that store values 1...n?
For example,â€¨Given n = 3, there are a total of 5 unique BST's.
   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

class Solution {
public:
    int numTrees(int n) {
        if(n<=2) return n;
        int a[n+1];
        a[0] = 1;
        a[1] = 1;
        a[2] = 2;
        
        int result = 0;
        for(int i=3; i<=n; i++){
            for(int j=0; j<i; j++){
                result += a[j]*a[i-j-1];
            }
            a[i] = result;
            result = 0;
        }
        return a[n];
    }
};