Suppose a sorted array is rotated at some pivot unknown to you beforehand.
(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
You are given a target value to search. If found in the array return its index, otherwise return -1.
You may assume no duplicate exists in the array.

class Solution {
public:
    int search(int a[], int n, int target) {
        if(n==0) -1;
        if(n==1){
            return target == a[0] ? 0 : -1;
        }
        
        int f1 = 0;
        int f2 = n-1;
        while(f1<f2){
            int mid = f1+(f2-f1)/2;
            if(a[mid] == target){
                return mid;
            }
          
           if(a[f1] <= a[mid]){
               if(target>=a[f1] && target <=a[mid]){
                   f2 =mid-1;
               }
               else{
                   f1 = mid+1;
               }
           }
           else{
               if(target <= a[f2] && target>=a[mid]){
                   f1 = mid+1;
               }
               else{
                   f2 = mid-1;
               }
           }

        }
        return target == a[f1] ? f1 : -1;
    }
};